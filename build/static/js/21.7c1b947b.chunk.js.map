{"version":3,"sources":["containers/Income/index.js","components/GridTitle/index.js","hoc/CardWrapper/index.js"],"names":["useStyles","makeStyles","theme","root","display","flexDirection","height","width","justifyContent","alignItems","Income","classes","useContext","AppContext","setLoadingInfo","account","className","title","style","justifyItems","variant","props","breakpoints","down","padding","noPaddingTop","spacing","center","bold","GridTitle","buttonName","history","useHistory","useTheme","isSm","useMediaQuery","defaultMatches","Typography","ContainedButton","backgroundColor","custom","palette","green","onClick","push","PAGES","POLLS","url","headerContainer","marginLeft","marginBottom","CardWrapper","children"],"mappings":"0GACA,4DAOMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,OAAQ,OACRC,MAAO,OACPC,eAAgB,SAChBC,WAAY,cAoBDC,UAhBA,WACb,IAAMC,EAAUX,IADG,EAEiBY,qBAAWC,KAF5B,EAEXC,eAFW,EAEKC,QAGxB,OACE,qBAAKC,UAAWL,EAAQR,KAAxB,SACE,cAAC,IAAD,CAAac,MAAO,mBAApB,SACE,qBAAKC,MAAO,CAAEd,QAAS,OAAQG,MAAO,OAAQD,OAAQ,OAAQG,WAAY,SAAUU,aAAc,UAAlG,SACE,cAAC,IAAD,CAAYC,QAAQ,KAApB,oC,sHCnBJpB,EAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAM,SAAAkB,GAAK,gCACRnB,EAAMoB,YAAYC,KAAK,MAAQ,CAC9BC,QAASH,EAAMI,aAAevB,EAAMwB,QAAQ,GAAKxB,EAAMwB,QAAQ,EAAG,EAAG,EAAG,KAFjE,wBAIA,QAJA,6BAKKxB,EAAMwB,QAAQ,IALnB,+BAMOL,EAAMM,OAAS,SAAW,iBANjC,2BAOG,UAPH,GASXC,MAAI,mBACD1B,EAAMoB,YAAYC,KAAK,MAAQ,CAC9BnB,QAAS,SAFT,2BAIU,OAJV,OAsCSyB,EA9BG,SAAC,GAAiD,IAA/CZ,EAA8C,EAA9CA,MAAOa,EAAuC,EAAvCA,WAAYH,EAA2B,EAA3BA,OAAQF,EAAmB,EAAnBA,aACxCd,EAAUX,EAAU,CAAE2B,SAAQF,iBAC9BM,EAAUC,cACV9B,EAAQ+B,cACRC,EAAOC,YAAcjC,EAAMoB,YAAYC,KAAK,MAAO,CACvDa,gBAAgB,IAOlB,OACE,sBAAKpB,UAAWL,EAAQR,KAAxB,UACE,cAACkC,EAAA,EAAD,CAAYrB,UAAWL,EAAQiB,KAAMR,QAAQ,KAA7C,SACGH,IAGDa,IAAeI,GACf,cAACI,EAAA,EAAD,CACEpB,MAAO,CAAEqB,gBAAiBrC,EAAMsC,OAAOC,QAAQC,OAC/CC,QAba,WACnBZ,EAAQa,KAAR,UAAgBC,IAAMC,MAAMC,IAA5B,UAUI,SAIGjB,QC5CL9B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,SAAAkB,GAAK,gCACRnB,EAAMoB,YAAYC,KAAK,MAAQ,CAC9BC,QAAStB,EAAMwB,QAAQ,EAAG,IAAK,EAAG,OAF3B,uBAID,QAJC,sBAKF,QALE,wBAMA,QANA,8BAOML,EAAMhB,cAAgB,MAAQ,UAPpC,+BAQO,iBARP,wBASAH,EAAMwB,QAAQ,EAAG,EAAG,EAAG,IATvB,GAWXsB,gBAAiB,CACf5C,QAAS,OACTI,eAAgB,gBAChBC,WAAY,SACZwC,WAAY/C,EAAMwB,QAAQ,GAC1BwB,aAAchD,EAAMwB,QAAQ,QAoBjByB,IAhBK,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,SAAUnC,EAA6D,EAA7DA,MAAOa,EAAsD,EAAtDA,WAAYH,EAA0C,EAA1CA,OAAQtB,EAAkC,EAAlCA,cAAeoB,EAAmB,EAAnBA,aACnEd,EAAUX,EAAU,CAAEK,gBAAeoB,iBAE3C,OACE,sBAAKT,UAAWL,EAAQR,KAAxB,UACE,cAAC,EAAD,CACEwB,OAAQA,EACRV,MAAOA,EACPa,WAAYA,EACZL,aAAgBA,IAEjB2B","file":"static/js/21.7c1b947b.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AppContext } from 'contexts';\r\n\r\nimport CardWrapper from 'hoc/CardWrapper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    width: '100%',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nconst Income = () => {\r\n  const classes = useStyles();\r\n  const { setLoadingInfo, account } = useContext(AppContext);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CardWrapper title={'Intercoin Income'}>\r\n        <div style={{ display: 'flex', width: '100%', height: '100%', alignItems: 'center', justifyItems: 'center' }}>\r\n          <Typography variant='h6'> Coming Soon! </Typography>\r\n        </div>\r\n      </CardWrapper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Income;\r\n","\r\nimport React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Typography, useMediaQuery } from '@material-ui/core';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { PAGES } from 'utils/links/pages';\r\nimport ContainedButton from 'components/UI/Buttons/ContainedButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: props => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: props.noPaddingTop ? theme.spacing(0) : theme.spacing(2, 0, 0, 0),\r\n    },\r\n    display: 'flex',\r\n    marginBottom: theme.spacing(2),\r\n    justifyContent: props.center ? 'center' : 'space-between',\r\n    alignItems: 'center'\r\n  }),\r\n  bold: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none'\r\n    },\r\n    fontWeight: '400'\r\n  }\r\n}));\r\n\r\nconst GridTitle = ({ title, buttonName, center, noPaddingTop }) => {\r\n  const classes = useStyles({ center, noPaddingTop });\r\n  const history = useHistory();\r\n  const theme = useTheme();\r\n  const isSm = useMediaQuery(theme.breakpoints.down('sm'), {\r\n    defaultMatches: true,\r\n  });\r\n\r\n  const clickHandler = () => {\r\n    history.push(`${PAGES.POLLS.url}/new`)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.bold} variant='h5' >\r\n        {title}\r\n      </Typography>\r\n      {\r\n        buttonName && !isSm &&\r\n        <ContainedButton\r\n          style={{ backgroundColor: theme.custom.palette.green }}\r\n          onClick={clickHandler}\r\n        >\r\n          {buttonName}\r\n        </ContainedButton>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GridTitle;","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport GridTitle from 'components/GridTitle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: props => ({\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: theme.spacing(0, 1.5, 0, 1.5),\r\n    },\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: props.flexDirection ? 'row' : 'column',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(2, 4, 0, 4),\r\n  }),\r\n  headerContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginLeft: theme.spacing(0),\r\n    marginBottom: theme.spacing(0)\r\n  }\r\n}));\r\n\r\nconst CardWrapper = ({ children, title, buttonName, center, flexDirection, noPaddingTop }) => {\r\n  const classes = useStyles({ flexDirection, noPaddingTop});\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <GridTitle\r\n        center={center}\r\n        title={title}\r\n        buttonName={buttonName}\r\n        noPaddingTop = {noPaddingTop}\r\n        />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardWrapper;\r\n"],"sourceRoot":""}